#!/usr/bin/python3.9
import os
import sys
import json
import subprocess

def system(cmd):
    print(cmd)
    return os.system(cmd) and sys.exit(1)

os.chdir(os.environ['PROJECT_DIR'])
sys.path.insert(0, os.environ['CONFIG_DIR'])

import config
config = getattr(config, os.environ['PROJECT'])

image = config['image']

system(f"rm -f {image['name']}")

system(f"truncate -s {image['size']} {image['name']}")

if image['format'] == 'msdos':
    system(f"parted --script {image['name']} mklabel {image['format']}")
    prted = '/sbin/fdisk'
    p = subprocess.Popen([prted, image['name']], stdout=subprocess.PIPE, stdin=subprocess.PIPE, stderr=subprocess.PIPE)
    p.stdin.write(f"x\ni\n0x{image['uuid']}\nr\nw\n".encode('charmap'))
    p.stdin.close()
    p.wait()
    p.poll() and (print(p.stdout.read().decode('charmap'), p.stderr.read().decode('charmap')), sys.exit(1))
else
    os.system(f"sgdisk -Z {LOOP}")
    os.system(f"sgdisk --disk-guid={image['uuid']}")
    for idx,partition in enumerate(image['partitions']):
        start = 0
        end   = 0
        if startQuery := partition.get('start'):
            start = startQuery
        if endQuery := partition.get('end'):
            end = endQuery

        os.system(f"sgdisk --new={idx}:{start}:{end} {image['name']}")

        if partuuid := partition.get('partuuid'):
            os.system(f"sgdisk --partition-guid={idx}:{partuuid} {image['name']}")

        if typeuuid := partition.get('typeuuid'):
            os.system(f"sgdisk --typecode={idx}:{typeuuid} {image['name']}")

        if name := partition.get('name'):
            os.system(f"sgdisk --change-name={idx}:{name} {image['name']}")

system(f"sync")
system(f"losetup --partscan --find {image['name']}")

p = subprocess.Popen(["/sbin/losetup", "-l", "-J", "-j", image['name']], stdout=subprocess.PIPE)
p.wait()
p.poll() and sys.exit(1)

LOOP = json.load(p.stdout)['loopdevices'][0]['name']

for idx,partition in enumerate(image['partitions']):
    system(f"mkfs.{partition['format']} {LOOP}p{idx+1} {partition.get('args', '')}")
    if flags := partition.get('flags'):
        for f,v in flags.items():
            if image['format'] == 'msdos':
                system(f"parted --script {LOOP} set {idx+1} {f} {v}")
            else
                if "on" == v:
                    action = "set"
                else if "off" == v:
                    action = "clear"
                else
                    continue

                if "system" == f:
                    bit = 0
                if "boot" == f:
                    bit = 2
                else
                    continue

                os.system(f"sgdisk --attribute={idx}:{action}:{bit} {LOOP}")

if image['format'] == 'hybrid':
    os.system(f"sgdisk --hybrid=1:EE {LOOP}")

    prted = '/sbin/fdisk'
    p = subprocess.Popen([prted, '--type=mbr', image['name']], stdout=subprocess.PIPE, stdin=subprocess.PIPE, stderr=subprocess.PIPE)
    p.stdin.write(f"a\n1\nt\nc\nw\n".encode('charmap'))
    p.stdin.close()
    p.wait()
    p.poll() and (print(p.stdout.read().decode('charmap'), p.stderr.read().decode('charmap')), sys.exit(1))

system(f"sync")
system(f"losetup --detach {LOOP}")

if "msdos" == image['format']
    system(f"fdisk --type=mbr --list {image['name']}")
else
    system(f"sgdisk -p {image['name']}")

if "hybrid" == image['format']
    system(f"fdisk --type=mbr --list {image['name']}")
